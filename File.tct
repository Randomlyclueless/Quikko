quikko/
│── backend/                      # Flask Backend
│   ├── app/                      
│   │   ├── routes/               # API routes (e.g., products, cart, user)
│   │   │   └── api.py            # Flask API routes
│   │   ├── models.py             # Database models
│   │   ├── static/               # Static files if needed (images, etc.)
│   │   ├── templates/            # If needed for HTML fallback (optional)
│   │   └── __init__.py           # Initialize Flask app
│   ├── instance/
│   │   └── config.py             # Database credentials, Flask config
│   ├── migrations/               # For database migrations
│   ├── tests/                    # Backend unit tests
│   ├── requirements.txt          # Python dependencies (Flask, SQLAlchemy, etc.)
│   └── run.py                    # Main entry point for Flask server
│
│── frontend/                     # React Frontend
│   ├── public/                   # Public static files (favicon, index.html)
│   ├── src/
│   │   ├── components/           # React components (Navbar, ProductCard, etc.)
│   │   ├── pages/                # Pages (HomePage, CartPage, etc.)
│   │   ├── App.js                # Main React App component
│   │   ├── index.js              # Entry point for React
│   │   └── styles/               # CSS or Tailwind config
│   ├── package.json              # React dependencies
│   └── README.md                 # Frontend documentation
│
│── .gitignore                    # Ignore unnecessary files in Git
│── README.md                     # Project documentation

pip install flask flask-cors flask-sqlalchemy flask-migrate
pip freeze > requirements.txt
cd ../quikko-frontend
npm install axios


quikko-frontend/
└── src/
    ├── components/              # Reusable UI components
    │   └── Navbar.js            
    ├── pages/                   # Main pages
    │   ├── HomePage.js             │   ├── ShopkeeperPage.js    # Shopkeeper dashboard
    │   ├── AdminPage.js         # Admin dashboard
    │   ├── CustomerPage.js      # Customer dashboard
    │   ├── LoginPage.js         # Login page
    │   ├── SignupPage.js        # Signup page
    │   ├── ProductPage.js       # Product listing
    │   ├── CartPage.js          # Shopping cart page
    │   ├── CheckoutPage.js      # Checkout page
    │   └── PaymentStatusPage.js # Payment confirmation/status page
    │
    ├── App.js                   # Main app component
    ├── index.js                 # Main entry point
    └── index.css                # Global styles

CREATE USER 'quikko_user'@'localhost' IDENTIFIED BY 'Password@123';


INSERT INTO users (username, email, contact, address, password) VALUES
('Alice Doe', 'alice@example.com', '1234567890', '123 Street, City', '$2a$10$ZbYv9Q8JQnLFAox9HfMSsOicT0Unuh5F7LqYXJfTnLK/SY56E8ZoG'),
('Bob Smith', 'bob@example.com', '0987654321', '456 Avenue, City', '$2a$10$lfK8DQYfZTtpbncMEeAVtuVVZQ2bi0RZSvbnTUmVs5idjOjOP6bwW');

INSERT INTO users (username, email, password) VALUES
('Alice Doe', 'alice@example.com', 'test123'),
('Bob Smith', 'bob@example.com', 'password123');



INSERT INTO vendors (shop_name, owner_name, email, phone, business_category, address, password_hash, shop_logo, business_license, created_at, updated_at)
VALUES 
  ('Tech Haven', 'Alice Johnson', 'alice.johnson@example.com', '9876543210', 'Electronics', '123 Tech St, Silicon Valley', 'hashedpassword1', 'path/to/logo1.jpg', 'path/to/license1.pdf', NOW(), NOW()),
  ('Book Corner', 'Bob Smith', 'bob.smith@example.com', '9876543211', 'Books', '456 Book Ave, Midtown', 'hashedpassword2', 'path/to/logo2.jpg', 'path/to/license2.pdf', NOW(), NOW());
